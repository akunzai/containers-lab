#!/bin/sh
# generated by vault-agent @ {{ timestamp }}
# VAULT_KV_PREFIX={{ env "VAULT_KV_PREFIX" }}{{ with env "VAULT_APP_PATH" }}, VAULT_APP_PATH={{ . }}{{ end }}
set -euo pipefail
umask 077

exec >> /tmp/render-secrets.log 2>&1
set -x
echo "[render] $(date -Iseconds) start"

PREFIX="{{ env "VAULT_KV_PREFIX" }}"
APP="{{ env "VAULT_APP_PATH" }}"
{{- $prefix := env "VAULT_KV_PREFIX" }}
{{- $app    := env "VAULT_APP_PATH" }}
{{- $meta := "" }}
{{- $data := "" }}
{{- if ne $app "" }}
{{- $meta = printf "%s/metadata/%s" $prefix $app }}
{{- $data = printf "%s/data/%s"     $prefix $app }}
{{- else }}
{{- $meta = printf "%s/metadata" $prefix }}
{{- $data = printf "%s/data"     $prefix }}
{{- end }}

WORKDIR="/tmp/secrets-stage.$$"
rm -rf "$WORKDIR"
mkdir -p "$WORKDIR"

# 列舉單層 keys：例如 db_password、api_key…
{{- range secrets $meta }}
{{- $safe := regexReplaceAll "/" "_" . }}
{{- with secret (printf "%s/%s" $data .) }}
cat > "$WORKDIR/{{ $safe }}" <<'EOF_{{ $safe }}'
{{- if .Data.data.value }}
{{ .Data.data.value }}
{{- else }}
{{ toJSON .Data.data }}
{{- end }}
EOF_{{ $safe }}
chmod 0400 "$WORKDIR/{{ $safe }}"
{{- end }}
{{- end }}

for f in "$WORKDIR"/*; do
  base="$(basename "$f")"
  mv -f "$f" "/secrets/$base"
done
rmdir "$WORKDIR"

ls -l /secrets 1>&2 || true
echo "[render] done"