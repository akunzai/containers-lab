version: '2'

services:
  loki:
    # https://grafana.com/docs/loki/latest/setup/install/docker/
    image: grafana/loki
    restart: unless-stopped
    volumes:
      - loki-data:/loki
      - ./loki-config.yml:/etc/loki/loki-config.yml:ro
    command:
      # https://grafana.com/docs/loki/latest/configure/
      - -config.expand-env=true
      - -config.file=/etc/loki/loki-config.yml
      # disable anonymous usage reporting
      - -reporting.enabled=false
      # https://grafana.com/docs/loki/latest/operations/storage/table-manager/#retention
      - -table-manager.retention-period=90d
      - -table-manager.retention-deletes-enabled=true
      # mitigating: too many outstanding requests
      # https://github.com/grafana/loki/issues/5123#issuecomment-1167018445
      - -querier.max-outstanding-requests-per-tenant=4096
      - -querier.split-queries-by-interval=15m
      - -query-scheduler.max-outstanding-requests-per-tenant=4096

  promtail:
    # https://grafana.com/docs/loki/latest/clients/promtail/installation/
    image: grafana/promtail
    restart: unless-stopped
    volumes:
      - ./traefik/log:/var/log/traefik:ro
      - ./promtail-config.yml:/etc/promtail/promtail-config.yml:ro
    environment:
      LOKI_URL: 'http://loki:3100/loki/api/v1/push'
    command:
      - -config.expand-env=true
      - -config.file=/etc/promtail/promtail-config.yml

  grafana:
    # https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/
    image: grafana/grafana-enterprise
    restart: unless-stopped
    environment:
      # https://grafana.com/docs/grafana/latest/administration/configuration/
      GF_SERVER_ROOT_URL: 'http://www.dev.local'
      # 管理者帳號密碼, 應避免在正式環境中使用預設值
      # GF_SECURITY_ADMIN_USER: 'admin'
      # GF_SECURITY_ADMIN_PASSWORD: 'admin'
    volumes:
      - grafana-data:/var/lib/grafana
      # https://grafana.com/tutorials/provision-dashboards-and-data-sources/#introduction
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
      # 如果要自動匯入 dashboard 的話
      # - ./grafana/dashboards:/var/lib/grafana/dashboards
      # - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
    labels:
      - traefik.enable=true
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.http.routers.grafana.rule=Host(`www.dev.local`)

  traefik:
    image: traefik
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # 如果有相關配置檔案的話
      # - ./traefik/etc:/etc/traefik
      # - ./certs:/etc/traefik/certs
      - ./traefik/log:/var/log/traefik
    environment:
      TZ: Asia/Taipei
    command:
      # https://doc.traefik.io/traefik/operations/dashboard/#secure-mode
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      # 如果要使用 file provider 的話
      # - --providers.file.directory=/etc/traefik/dynamic/
      # - --providers.file.watch=true
      # https://doc.traefik.io/traefik/observability/metrics/prometheus/
      - --metrics.prometheus=true
      # https://doc.traefik.io/traefik/observability/access-logs/
      - --accesslog=true
      - --accesslog.filepath=/var/log/traefik/access.log
      - --accesslog.format=json
      - --accesslog.fields.names.StartUTC=drop
    ports:
      - 127.0.0.1:80:80
      - 127.0.0.1:9090:8080

volumes:
  loki-data:
  grafana-data: