services:
  grafana:
    # https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/
    image: docker.io/grafana/grafana-enterprise
    restart: always
    environment:
    # https://grafana.com/docs/grafana/latest/administration/configuration/
    # GF_SERVER_ROOT_URL: 'http://monitor.dev.local'
    # 管理者帳號密碼, 應避免在正式環境中使用預設值
    # GF_SECURITY_ADMIN_USER: 'admin'
    # GF_SECURITY_ADMIN_PASSWORD: 'admin'
    # GF_SECURITY_ADMIN_PASSWORD__FILE: /run/secrets/grafana_admin.pwd
      GF_SECURITY_DISABLE_GRAVATAR: "true"
      GF_ANALYTICS_ENABLED: "false"
      GF_ANALYTICS_REPORTING_ENABLED: "false"
      GF_ANALYTICS_CHECK_FOR_UPDATES: "false"
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: "false"
      GF_ANALYTICS_FEEDBACK_LINKS_ENABLED: "false"
      GF_NEWS_NEWS_FEED_ENABLED: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      # https://grafana.com/tutorials/provision-dashboards-and-data-sources/#introduction
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      # 如果要自動匯入 dashboard 的話
      # - ./grafana/dashboards:/var/lib/grafana/dashboards
      # - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
    ports:
      - 127.0.0.1:3000:3000
    healthcheck:
      test: wget -qO- --spider 'http://localhost:3000/api/health'
      interval: 30s
      timeout: 10s
      retries: 3
  prometheus:
    # https://github.com/prometheus/prometheus
    image: docker.io/prom/prometheus
    restart: always
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus:ro
    command:
      # https://github.com/prometheus/prometheus/blob/main/Dockerfile
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      # https://prometheus.io/docs/prometheus/latest/storage/
      - "--storage.tsdb.retention.time=15d"
      # https://prometheus.io/docs/prometheus/latest/management_api/
      - "--web.enable-lifecycle"
    # 如果需要自訂主機名稱對應IP的話
    # extra_hosts:
    #   - "somehost:127.0.0.2"
    ports:
      - 127.0.0.1:9090:9090
    healthcheck:
      test: wget -qO- --spider 'http://localhost:9090/-/healthy'
      interval: 30s
      timeout: 10s
      retries: 3
  alertmanager:
    # https://github.com/prometheus/alertmanager
    image: docker.io/prom/alertmanager
    restart: always
    volumes:
      - alertmanager_data:/alertmanager
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    ports:
      - 127.0.0.1:9093:9093
    healthcheck:
      test: wget -qO- --spider 'http://localhost:9093/-/healthy'
      interval: 30s
      timeout: 10s
      retries: 3
  loki:
    # https://grafana.com/docs/loki/latest/setup/install/docker/
    image: docker.io/grafana/loki
    restart: always
    volumes:
      - loki_data:/loki
      - ./loki.yml:/etc/loki/loki.yml:ro
    command:
      # https://grafana.com/docs/loki/latest/configure/
      - -config.file=/etc/loki/loki.yml
      # disable anonymous usage reporting
      - -reporting.enabled=false
      # https://grafana.com/docs/loki/latest/operations/storage/table-manager/#retention
      - -table-manager.retention-period=90d
      - -table-manager.retention-deletes-enabled=true
      # mitigating: too many outstanding requests
      # https://github.com/grafana/loki/issues/5123#issuecomment-1167018445
      - -querier.max-outstanding-requests-per-tenant=4096
      - -querier.split-queries-by-interval=15m
      - -query-scheduler.max-outstanding-requests-per-tenant=4096
    healthcheck:
      test: wget -qO- --spider 'http://localhost:3100/ready'
      interval: 30s
      timeout: 10s
      retries: 3
  blackbox_exporter:
    # https://github.com/prometheus/blackbox_exporter
    image: docker.io/prom/blackbox-exporter
    restart: always
    volumes:
      - ./blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    healthcheck:
      test: wget -qO- --spider 'http://localhost:9115/-/healthy'
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  alertmanager_data:
  grafana_data:
  loki_data:
  prometheus_data:
